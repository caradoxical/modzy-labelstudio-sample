import dropbox
import os
from modzy import ApiClient
from modzy._util import file_to_bytes

def inference():
    #Runs an inference on each image in this folder and then save the image to Dropbox
    image_folder = "images-test"
    for filename in os.listdir(image_folder):
        f = os.path.join(image_folder,filename)
        
        #Sends the image to Modzy for inference and get back a Job ID number
        job_ID = modzy_inference(f,filename)
        print("Inference Job Identifier: " + job_ID)
        
        #Upload the source image to Dropbox and name it after the Job ID generated by Modzy so they can later be matched
        upload_image(f,job_ID)

def modzy_inference(image_path,image_ID):
    #Creates a Modzy client
    client = ApiClient(base_url="https://app.modzy.com/api", api_key=os.environ.get("MODZY_API_KEY"))

    #Creates the input sources object and base64 encodes the image
    sources = {}
    sources[image_ID] = {
        "image": file_to_bytes(image_path),
    }

    #Submits the image to a model that performs Image-based Geolocation
    job = client.jobs.submit_file("aevbu1h3yw", "1.0.1", sources, True)
    return job.get("jobIdentifier")

def upload_image(image_path,image_ID):
    #Creates a Dropbox client
    dbx = dropbox.Dropbox(os.environ.get("DROPBOX_ACCESS_TOKEN"))
    
    #Uploads the image to Dropbox
    dbx.files_upload(file_to_bytes(image_path),'/' + str(image_ID) + '.jpg')


if __name__ == '__main__':
    inference()